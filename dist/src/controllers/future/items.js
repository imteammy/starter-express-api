let{Items:e}=require("@models"),{nc:s}=require("@config/node"),t=300;exports.getAll=async(n,a)=>{let r=s.get("Items");if(r)return a.send(r);try{let n=await e.find({}),r={message:"All items is empty."};return 0===n.length?a.json(r):(s.set("Items",n,t),a.send(n))}catch(error){return a.status(400).send(error.message)}},exports.getID=async(n,a)=>{let{id:r}=n.body,o=s.get(r);if(o)return a.json(o);await e.findOne({_id:r}).then((e=>0===e.length?a.json({message:"Item not found by ID : "+r}):(s.set(r,e,t),a.json(e))))["catch"]((e=>a.status(400).send(error.message)))},exports.update=async(s,t)=>{let n=s.body;delete n.token;let a={_id:n.id},r={$set:n};await e.findOneAndUpdate(a,r,{"new":!0}).then((e=>0===e.length?t.status(404).json({message:"Item not found."}):t.json({success:"Item updated successfully.",message:e})))["catch"]((e=>t.status(400).send(error.message)))},exports.remove=async(s,t)=>{let{id:n}=s.body;await e.findOneAndDelete({_id:n}).then((e=>null===e||0===e.length?t.json({message:"Item not found."}):t.json({message:"Delete Item success"})))["catch"]((e=>t.status(400).send(error.message)))},exports.create=async(s,t)=>{let n=s.body;delete n.token;let a=new e(n);await a.save().then((e=>t.json({success:"Add item success",message:e})))["catch"]((e=>t.json({error:e.message})))};