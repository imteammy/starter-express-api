let{Roons:e}=require("@models"),{nc:s}=require("@config/node"),t=300;exports.getAll=async(n,o)=>{let a=s.get("Roons");if(a)return o.status(200).json(a);await e.find().then((e=>e?(s.set("Roons",e,t),o.json(e)):o.json({message:"All roons is empty."})))["catch"]((e=>o.send(r)))},exports.getID=async(n,o)=>{let{id:a}=n.body,d=s.get("Roons");if(d)return o.json(d);await e.findOne({id:a}).then((e=>0===e.lenght?o.status(400).json({message:"Roons not found!"}):(s.set("Roons",e,t),o.json(e))))["catch"]((e=>o.send(e.message)))},exports.update=async(s,t)=>{let n=s.body;delete n.token;let o={_id:n.id},a={$set:n},d=await e.findOneAndUpdate(o,a,{"new":!0}).then((e=>{if(0===e.lenght)return t.status(404).json({message:"Roon not found."})}))["catch"]((e=>t.json({message:"Roon updated successfully.",data:d})))},exports.remove=async(s,t)=>{let{id:n}=s.body;await e.findOneAndDelete({_id:n}).then((e=>t.json("Delete Roon success")))["catch"]((e=>t.status(400).send(error.message)))},exports.create=async(s,t)=>{let n=s.body;delete n.token,await e.create(n).then((e=>t.json({success:"Add roon success",message:e})))["catch"]((e=>t.status(400).send(e.message)))};