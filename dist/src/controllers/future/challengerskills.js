let{ChallengerSkills:e}=require("@models"),{nc:t}=require("@config/node"),s=300;exports.getAll=async(t,s,n)=>{try{let t=await e.find({});return 0===t.length?s.json({message:"ChallengerSkills is empty"}):s.json(t)}catch(a){return s.send(a.message)}},exports.getID=async(t,s)=>{let n=t.body;try{let t=await e.findOne({_id:n});return s.json(t)}catch(a){return s.send(a.message)}},exports.update=async(t,s)=>{let n=t.body;delete n.token;try{let t={_id:n.id},a={$set:n},l=await e.findOneAndUpdate(t,a,{"new":!0});return 0===l.lenght?s.json({message:"ChallengerSkills not found"}):s.json(l)}catch(a){return s.json(a.message)}},exports.remove=async(t,s)=>{let{id:n}=t.body;try{let t=await e.findOneAndDelete({_id:n});return 0===t.lenght?s.json({message:"Challenger not found!"}):s.json({message:"Delete ChallengerSkill success",data:t})}catch(a){return s.json(a.message)}},exports.create=async(t,s)=>{let n=t.body;delete n.token;try{let t=await e.create(n);return 0===t.lenght?s.json({message:"Cannot Create  ChallengerSkills",data:t}):s.json({success:"Add skill success",message:t})}catch(a){return s.status(400).send(a.message)}};